<Page x:Name="mainPage"
    x:Class="JustRemember.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
	xmlns:ad="using:Microsoft.Advertising.WinRT.UI"
    xmlns:local="using:JustRemember.Models"
    mc:Ignorable="d">
	<Grid>
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="VisualStateGroup">
				<VisualState x:Name="Mobile">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="0"/>
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="pcListView.Visibility" Value="Collapsed"/>
						<Setter Target="mainPivot.Visibility" Value="Visible"/>
						<Setter Target="mainPivot.(Grid.ColumnSpan)" Value="2"/>
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="Pc">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="{x:Bind halfRes}"/>
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="pcListView.Visibility" Value="Visible"/>
						<Setter Target="mainPivot.Visibility" Value="Collapsed"/>
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
		<Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition x:Name="pcSeparator" Width="*"/>
			</Grid.ColumnDefinitions>
			<Pivot PivotItemLoaded="changePage" x:Name="mainPivot" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Style="{StaticResource SettingsPivot}">
				<PivotItem Margin="0" Foreground="{ThemeResource AccentButtonForeground}">
					<PivotItem.Header>
						<SymbolIcon Symbol="Page2" RenderTransformOrigin="0.5,0.5">
							<SymbolIcon.RenderTransform>
								<CompositeTransform ScaleX="1.5" ScaleY="1.5"/>
							</SymbolIcon.RenderTransform>
						</SymbolIcon>
					</PivotItem.Header>
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
							<RowDefinition Height="{x:Bind ViewModel.showAds, Mode=OneWay}"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<TextBlock Margin="5" VerticalAlignment="Center" FontSize="18" Text="{x:Bind ViewModel.NoteCount, Mode=OneWay}" Grid.Row="0" Foreground="{ThemeResource ApplicationForegroundThemeBrush}"/>
						<ListView SelectedIndex="{x:Bind ViewModel.selectedIndex, Mode=TwoWay}" Margin="5" Grid.Row="1" SelectionMode="Single" ItemsSource="{x:Bind ViewModel.Notes, Mode=OneWay}" x:FieldModifier="public">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="DoubleTapped">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel.OpenNote}"/>
								</ic:EventTriggerBehavior>
								<ic:EventTriggerBehavior EventName="SelectionChanged">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel.SelectNote}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
							<ListView.ItemContainerStyle>
								<Style TargetType="ListViewItem">
									<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
								</Style>
							</ListView.ItemContainerStyle>
							<ListView.ItemTemplate>
								<DataTemplate x:DataType="local:NoteModel">
									<Grid>
										<Grid.RowDefinitions>
											<RowDefinition Height="*"/>
											<RowDefinition Height="*"/>
										</Grid.RowDefinitions>
										<TextBlock TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Grid.Row="0" FontSize="22" Text="{x:Bind Title}"/>
										<TextBlock TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Grid.Row="1" FontSize="16" Text="{x:Bind FirstLine}" Foreground="{ThemeResource TextControlForegroundDisabled}"/>
									</Grid>
								</DataTemplate>
							</ListView.ItemTemplate>
						</ListView>
						<TextBlock Visibility="{x:Bind ViewModel.noNoteSuggestion, Mode=OneWay}" Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="30" FontSize="30" TextWrapping="Wrap" TextAlignment="Right">
                    <Run x:Uid="Home_NoNote1" Text="You don't have any note"/>
                    <LineBreak/>
                    <Run x:Uid="Home_NoNote2" Text="You can add note by Write new note"/>
                    <LineBreak/>
                    <Run x:Uid="Home_NoNote3" Text="Or import text file"/>
                    <LineBreak/>
                    <Run x:Uid="Home_Nonote4" Text="By click at menu below"/>
						</TextBlock>
						<ad:AdControl 
						Height="120"
						IsAutoRefreshEnabled="True"
						Grid.Row="2"
						ApplicationId="9nzklwbqcq31"
						AdUnitId="11689284"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"/>
						<CommandBar Grid.Row="3">
							<CommandBar.Content>
								<AppBarButton Icon="Setting">
									<i:Interaction.Behaviors>
										<ic:EventTriggerBehavior EventName="Click">
											<ic:InvokeCommandAction Command="{x:Bind ViewModel2.GoToSetting}"/>
										</ic:EventTriggerBehavior>
									</i:Interaction.Behaviors>
								</AppBarButton>
							</CommandBar.Content>
							<CommandBar.SecondaryCommands>
								<AppBarButton x:Uid="Home_prenoteMenu" Icon="AllApps" Label="Prenote">
									<i:Interaction.Behaviors>
										<ic:EventTriggerBehavior EventName="Click">
											<ic:InvokeCommandAction Command="{x:Bind ViewModel2.GoToBundledMemoes}"/>
										</ic:EventTriggerBehavior>
									</i:Interaction.Behaviors>
								</AppBarButton>
							</CommandBar.SecondaryCommands>

							<AppBarButton Visibility="{x:Bind ViewModel.IsNotSelected, Mode=OneWay}" Icon="Add" x:Uid="Home_add" Label="Add">
								<i:Interaction.Behaviors>
									<ic:EventTriggerBehavior EventName="Click">
										<ic:InvokeCommandAction Command="{x:Bind ViewModel.OpenAddFlyout}"/>
									</ic:EventTriggerBehavior>
								</i:Interaction.Behaviors>
								<AppBarButton.Flyout>
									<Flyout>
										<Grid>
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
											</Grid.RowDefinitions>
											<Button HorizontalAlignment="Center">
												<i:Interaction.Behaviors>
													<ic:EventTriggerBehavior EventName="Click">
														<ic:InvokeCommandAction Command="{x:Bind ViewModel.GoToNoteEditorWithNote}"/>
													</ic:EventTriggerBehavior>
												</i:Interaction.Behaviors>
												<StackPanel Orientation="Horizontal">
													<SymbolIcon Symbol="Edit"/>
													<TextBlock x:Uid="Home_edit_with_memoedit" Margin="5" VerticalAlignment="Center" Text="Memo editor"/>
												</StackPanel>
											</Button>
											<Button Margin="0,5" Grid.Row="2" HorizontalAlignment="Center">
												<i:Interaction.Behaviors>
													<ic:EventTriggerBehavior EventName="Click">
														<ic:InvokeCommandAction Command="{x:Bind ViewModel.GoToQuesionDesignerWithNote}"/>
													</ic:EventTriggerBehavior>
												</i:Interaction.Behaviors>
												<StackPanel Orientation="Horizontal">
													<SymbolIcon Symbol="Help"/>
													<TextBlock x:Uid="Home_edit_with_questdesi" Margin="5" VerticalAlignment="Center" Text="Question designer"/>
												</StackPanel>
											</Button>
										</Grid>
									</Flyout>
								</AppBarButton.Flyout>
							</AppBarButton>
							<AppBarButton Visibility="{x:Bind ViewModel.IsNotSelected, Mode=OneWay}" Icon="OpenFile" x:Uid="Home_import" Label="Import">
								<i:Interaction.Behaviors>
									<ic:EventTriggerBehavior EventName="Click">
										<ic:InvokeCommandAction Command="{x:Bind ViewModel.ImportNote}"/>
									</ic:EventTriggerBehavior>
								</i:Interaction.Behaviors>
							</AppBarButton>
							<AppBarButton Visibility="{x:Bind ViewModel.IsNotSelected, Mode=OneWay}" Icon="Refresh" x:Uid="Home_reload" Label="Reload">
								<i:Interaction.Behaviors>
									<ic:EventTriggerBehavior EventName="Click">
										<ic:InvokeCommandAction Command="{x:Bind ViewModel.ReloadList}"/>
									</ic:EventTriggerBehavior>
								</i:Interaction.Behaviors>
							</AppBarButton>

							<AppBarButton Visibility="{x:Bind ViewModel.IsSelected, Mode=OneWay}" Icon="OpenLocal" Label="Open" x:Uid="Home_open">
								<i:Interaction.Behaviors>
									<ic:EventTriggerBehavior EventName="Click">
										<ic:InvokeCommandAction Command="{x:Bind ViewModel.SendToMatch}"/>
									</ic:EventTriggerBehavior>
								</i:Interaction.Behaviors>
							</AppBarButton>
							<AppBarButton Visibility="{x:Bind ViewModel.IsSelected, Mode=OneWay}" Icon="Edit" Label="Edit" x:Uid="Home_edit">
								<i:Interaction.Behaviors>
									<ic:EventTriggerBehavior EventName="Click">
										<ic:InvokeCommandAction Command="{x:Bind ViewModel.EditSelector}"/>
									</ic:EventTriggerBehavior>
								</i:Interaction.Behaviors>
							</AppBarButton>
							<AppBarButton Visibility="{x:Bind ViewModel.IsSelected, Mode=OneWay}" Icon="Delete" x:Uid="Home_delete" Label="Delete">
								<i:Interaction.Behaviors>
									<ic:EventTriggerBehavior EventName="Click">
										<ic:InvokeCommandAction Command="{x:Bind ViewModel.DeleteSelected}"/>
									</ic:EventTriggerBehavior>
								</i:Interaction.Behaviors>
							</AppBarButton>
							<AppBarButton Visibility="{x:Bind ViewModel.IsSelected, Mode=OneWay}" Icon="Cancel" Label="De-Select" x:Uid="Home_deselect">
								<i:Interaction.Behaviors>
									<ic:EventTriggerBehavior EventName="Click">
										<ic:InvokeCommandAction Command="{x:Bind ViewModel.DeSelect}"/>
									</ic:EventTriggerBehavior>
								</i:Interaction.Behaviors>
							</AppBarButton>
						</CommandBar>
					</Grid>
				</PivotItem>
				<PivotItem Foreground="{ThemeResource AccentButtonForeground}" Margin="0">
					<PivotItem.Header>
						<SymbolIcon Symbol="Clock" RenderTransformOrigin="0.5,0.5">
							<SymbolIcon.RenderTransform>
								<CompositeTransform ScaleX="1.5" ScaleY="1.5"/>
							</SymbolIcon.RenderTransform>
						</SymbolIcon>
					</PivotItem.Header>
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
							<RowDefinition Height="{x:Bind ViewModel.showAds, Mode=OneWay}"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<TextBlock Margin="5" VerticalAlignment="Center" FontSize="18" Text="{x:Bind ViewModel2.SessionCount, Mode=OneWay}" Grid.Row="0" Foreground="{ThemeResource ApplicationForegroundThemeBrush}"/>
						<ListView SelectedIndex="{x:Bind ViewModel2.selectedIndex,Mode=TwoWay}" Margin="5" Grid.Row="1" SelectionMode="Single" ItemsSource="{x:Bind ViewModel2.SavedSessions, Mode=OneWay}">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="DoubleTapped">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel2.DoubleTappedSelection}"/>
								</ic:EventTriggerBehavior>
								<ic:EventTriggerBehavior EventName="SelectionChanged">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel2.UpdateSelection}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
							<ListView.ItemContainerStyle>
								<Style TargetType="ListViewItem">
									<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
								</Style>
							</ListView.ItemContainerStyle>
							<ListView.ItemTemplate>
								<DataTemplate x:DataType="local:SessionModel">
									<Grid Margin="0,5">
										<Grid.RowDefinitions>
											<RowDefinition Height="40"/>
											<RowDefinition MaxHeight="{x:Bind StatInfo.isTimeSlotShow, Mode=OneWay}" Height="30"/>
											<RowDefinition Height="30"/>
										</Grid.RowDefinitions>
										<StackPanel Grid.Row="0" Orientation="Horizontal">
											<TextBlock Text="&#xE121;" FontSize="24" FontFamily="Segoe MDL2 Assets">
											<ToolTipService.ToolTip>
												<ToolTip Placement="Right">
													<TextBlock Text="{x:Bind StatInfo.begintimeSTR, Mode=OneWay}"/>
												</ToolTip>
											</ToolTipService.ToolTip>
										</TextBlock>
											<TextBlock FontSize="24" Margin="5,-3" Text="{x:Bind StatInfo.noteTitle, Mode=OneWay}" TextWrapping="WrapWholeWords"/>
										</StackPanel>
										<Grid Grid.Row="1" Visibility="{x:Bind StatInfo.wasTimeLimited, Mode=OneWay}">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>
											<TextBlock Margin="5,3" Grid.Column="0">
                                            <Run Text="{x:Bind StatInfo.totalTimespend, Mode=OneWay}"/>
                                            <Run Text="/"/>
                                            <Run Text="{x:Bind StatInfo.totalLimitTime, Mode=OneWay}"/>
											</TextBlock>
											<ProgressBar Grid.Column="1" Margin="5,3" VerticalAlignment="Stretch" Minimum="0" Maximum="100" Value="{x:Bind StatInfo.timeValue, Mode=OneWay}"/>
										</Grid>
										<Grid Grid.Row="2">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>
											<TextBlock Margin="5,3">
                                            <Run Text="{x:Bind currentChoice, Mode=OneWay}"/>
                                            <Run Text="/"/>
                                            <Run Text="{x:Bind totalChoices, Mode=OneWay}"/>
											</TextBlock>
											<ProgressBar Grid.Column="1" Margin="5,3" VerticalAlignment="Stretch" Minimum="0" Maximum="100" Value="{x:Bind choiceProgress, Mode=OneWay}"/>
										</Grid>
									</Grid>
								</DataTemplate>
							</ListView.ItemTemplate>
						</ListView>
						<ad:AdControl 
						Height="120"
						IsAutoRefreshEnabled="True"
						Grid.Row="2"
						ApplicationId="9nzklwbqcq31"
						AdUnitId="11689284"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"/>
						<CommandBar Grid.Row="3">
							<CommandBar.Content>
								<AppBarButton Icon="Setting">
									<i:Interaction.Behaviors>
										<ic:EventTriggerBehavior EventName="Click">
											<ic:InvokeCommandAction Command="{x:Bind ViewModel2.GoToSetting}"/>
										</ic:EventTriggerBehavior>
									</i:Interaction.Behaviors>
								</AppBarButton>
							</CommandBar.Content>
							<CommandBar.SecondaryCommands>
								<AppBarButton x:Uid="Home_prenoteMenu" Icon="AllApps" Label="Prenote">
									<i:Interaction.Behaviors>
										<ic:EventTriggerBehavior EventName="Click">
											<ic:InvokeCommandAction Command="{x:Bind ViewModel2.GoToBundledMemoes}"/>
										</ic:EventTriggerBehavior>
									</i:Interaction.Behaviors>
								</AppBarButton>
							</CommandBar.SecondaryCommands>

							<AppBarButton Visibility="Visible" Icon="Refresh" Label="Reload">
								<i:Interaction.Behaviors>
									<ic:EventTriggerBehavior EventName="Click">
										<ic:InvokeCommandAction Command="{x:Bind ViewModel2.RefreshSessionList}"/>
									</ic:EventTriggerBehavior>
								</i:Interaction.Behaviors>
							</AppBarButton>
							<AppBarButton Visibility="{x:Bind ViewModel2.isSelected, Mode=OneWay}" Icon="OpenLocal" x:Uid="Home_open" Label="Open">
								<i:Interaction.Behaviors>
									<ic:EventTriggerBehavior EventName="Click">
										<ic:InvokeCommandAction Command="{x:Bind ViewModel2.OpenSession}"/>
									</ic:EventTriggerBehavior>
								</i:Interaction.Behaviors>
							</AppBarButton>
							<AppBarButton Visibility="{x:Bind ViewModel2.isSelected, Mode=OneWay}" Icon="Delete" x:Uid="Home_delete" Label="Delete">
								<i:Interaction.Behaviors>
									<ic:EventTriggerBehavior EventName="Click">
										<ic:InvokeCommandAction Command="{x:Bind ViewModel2.DeleteSession}"/>
									</ic:EventTriggerBehavior>
								</i:Interaction.Behaviors>
							</AppBarButton>
							<AppBarButton Visibility="{x:Bind ViewModel2.isSelected, Mode=OneWay}" Icon="Cancel" x:Uid="Home_deselect" Label="De-Select">
								<i:Interaction.Behaviors>
									<ic:EventTriggerBehavior EventName="Click">
										<ic:InvokeCommandAction Command="{x:Bind ViewModel2.DeSelectSession}"/>
									</ic:EventTriggerBehavior>
								</i:Interaction.Behaviors>
							</AppBarButton>
						</CommandBar>
					</Grid>
				</PivotItem>
			</Pivot>
			<Grid Grid.ColumnSpan="2" x:Name="pcListView">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				
				<Grid Grid.Column="0">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<Rectangle Grid.Row="0" HorizontalAlignment="Stretch" Height="50" Fill="{ThemeResource AccentButtonBackground}"/>
					<StackPanel Grid.Row="0" HorizontalAlignment="Right" Orientation="Horizontal">
						<FontIcon Glyph="&#xE096;"/>
						<SymbolIcon Symbol="Page"/>
					</StackPanel>
					<TextBlock Margin="5" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="18" Text="{x:Bind ViewModel.NoteCount, Mode=OneWay}" Grid.Row="0" Foreground="{ThemeResource ApplicationForegroundThemeBrush}"/>
					<ListView SelectedIndex="{x:Bind ViewModel.selectedIndex, Mode=TwoWay}" Margin="5" Grid.Row="1" SelectionMode="Single" ItemsSource="{x:Bind ViewModel.Notes, Mode=OneWay}" x:FieldModifier="public">
						<i:Interaction.Behaviors>
							<ic:EventTriggerBehavior EventName="DoubleTapped">
								<ic:InvokeCommandAction Command="{x:Bind ViewModel.OpenNote}"/>
							</ic:EventTriggerBehavior>
							<ic:EventTriggerBehavior EventName="SelectionChanged">
								<ic:InvokeCommandAction Command="{x:Bind ViewModel.SelectNote}"/>
							</ic:EventTriggerBehavior>
						</i:Interaction.Behaviors>
						<ListView.ItemContainerStyle>
							<Style TargetType="ListViewItem">
								<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
							</Style>
						</ListView.ItemContainerStyle>
						<ListView.ItemTemplate>
							<DataTemplate x:DataType="local:NoteModel">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="*"/>
										<RowDefinition Height="*"/>
									</Grid.RowDefinitions>
									<TextBlock TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Grid.Row="0" FontSize="22" Text="{x:Bind Title}"/>
									<TextBlock TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Grid.Row="1" FontSize="16" Text="{x:Bind FirstLine}" Foreground="{ThemeResource TextControlForegroundDisabled}"/>
								</Grid>
							</DataTemplate>
						</ListView.ItemTemplate>
					</ListView>
					<TextBlock Visibility="{x:Bind ViewModel.noNoteSuggestion, Mode=OneWay}" Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="30" FontSize="30" TextWrapping="Wrap" TextAlignment="Right">
                    <Run x:Uid="Home_NoNote1" Text="You don't have any note"/>
                    <LineBreak/>
                    <Run x:Uid="Home_NoNote2" Text="You can add note by Write new note"/>
                    <LineBreak/>
                    <Run x:Uid="Home_NoNote3" Text="Or import text file"/>
                    <LineBreak/>
                    <Run x:Uid="Home_Nonote4" Text="By click at menu below"/>
					</TextBlock>
					<CommandBar Grid.Row="2">
						<AppBarButton Visibility="{x:Bind ViewModel.IsNotSelected, Mode=OneWay}" Icon="OpenFile" x:Uid="Home_import" Label="Import">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel.ImportNote}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</AppBarButton>
						<AppBarButton Visibility="{x:Bind ViewModel.IsNotSelected, Mode=OneWay}" Icon="Refresh" x:Uid="Home_reload" Label="Reload">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel.ReloadList}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</AppBarButton>
						<AppBarButton Visibility="{x:Bind ViewModel.IsSelected, Mode=OneWay}" Icon="OpenLocal" Label="Open" x:Uid="Home_open">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel.SendToMatch}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</AppBarButton>
						<AppBarButton Visibility="{x:Bind ViewModel.IsSelected, Mode=OneWay}" Icon="Edit" Label="Edit" x:Uid="Home_edit">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel.EditSelector}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</AppBarButton>
						<AppBarButton Visibility="{x:Bind ViewModel.IsSelected, Mode=OneWay}" Icon="Delete" x:Uid="Home_delete" Label="Delete">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel.DeleteSelected}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</AppBarButton>
						<AppBarButton Visibility="{x:Bind ViewModel.IsSelected, Mode=OneWay}" Icon="Cancel" Label="De-Select" x:Uid="Home_deselect">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel.DeSelect}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</AppBarButton>
					</CommandBar>
				</Grid>
				<Grid VerticalAlignment="Stretch" Grid.Column="1">
					<Rectangle HorizontalAlignment="Stretch" Height="50" Fill="{ThemeResource AccentButtonBackground}" VerticalAlignment="Top"/>
					<Rectangle Fill="{ThemeResource AccentButtonBackground}"/>
					<CommandBar Style="{ThemeResource EditorCMD}" VerticalAlignment="Bottom"/>
				</Grid>
				<Grid Grid.Column="1" VerticalAlignment="Center" Margin="5,0">
					<StackPanel>
						<Button HorizontalAlignment="Center">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel2.GoToSetting}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
							<SymbolIcon Symbol="Setting"/>
							<ToolTipService.ToolTip>
								<TextBlock Text="Settings" x:Uid="QD_setting_page"/>
							</ToolTipService.ToolTip>
						</Button>
						<Button Margin="0,5" HorizontalAlignment="Center">
							<SymbolIcon Symbol="Edit"/>
							<ToolTipService.ToolTip>
								<TextBlock x:Uid="Home_edit_with_memoedit" Text="Memo editor"/>
							</ToolTipService.ToolTip>
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel.GoToNoteEditorWithNote}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</Button>
						<Button HorizontalAlignment="Center">
							<SymbolIcon Symbol="Help"/>
							<ToolTipService.ToolTip>
								<TextBlock x:Uid="Home_edit_with_questdesi" Text="Question designer"/>
							</ToolTipService.ToolTip>
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel.GoToQuesionDesignerWithNote}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</Button>
						<Button Margin="0,5" HorizontalAlignment="Center">
							<SymbolIcon Symbol="AllApps"/>
							<ToolTipService.ToolTip>
								<TextBlock x:Uid="Home_prenoteMenu2" Text="Bundled memos"/>
							</ToolTipService.ToolTip>
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel2.GoToBundledMemoes}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</Button>
					</StackPanel>
				</Grid>
				<Grid Grid.Column="2">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition/>
						<RowDefinition Height="{x:Bind ViewModel.showAds, Mode=OneWay}"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<Rectangle Grid.Row="0" HorizontalAlignment="Stretch" Height="50" Fill="{ThemeResource AccentButtonBackground}"/>
					<StackPanel Grid.Row="0" Orientation="Horizontal">
						<SymbolIcon Symbol="Clock"/>
						<FontIcon Glyph="&#xE097;"/>
					</StackPanel>
					<TextBlock Margin="5" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="18" Text="{x:Bind ViewModel2.SessionCount, Mode=OneWay}" Grid.Row="0" Foreground="{ThemeResource ApplicationForegroundThemeBrush}"/>
					<ListView SelectedIndex="{x:Bind ViewModel2.selectedIndex,Mode=TwoWay}" Margin="5" Grid.Row="1" SelectionMode="Single" ItemsSource="{x:Bind ViewModel2.SavedSessions, Mode=OneWay}">
						<i:Interaction.Behaviors>
							<ic:EventTriggerBehavior EventName="DoubleTapped">
								<ic:InvokeCommandAction Command="{x:Bind ViewModel2.DoubleTappedSelection}"/>
							</ic:EventTriggerBehavior>
							<ic:EventTriggerBehavior EventName="SelectionChanged">
								<ic:InvokeCommandAction Command="{x:Bind ViewModel2.UpdateSelection}"/>
							</ic:EventTriggerBehavior>
						</i:Interaction.Behaviors>
						<ListView.ItemContainerStyle>
							<Style TargetType="ListViewItem">
								<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
							</Style>
						</ListView.ItemContainerStyle>
						<ListView.ItemTemplate>
							<DataTemplate x:DataType="local:SessionModel">
								<Grid Margin="0,5">
									<Grid.RowDefinitions>
										<RowDefinition Height="40"/>
										<RowDefinition MaxHeight="{x:Bind StatInfo.isTimeSlotShow, Mode=OneWay}" Height="30"/>
										<RowDefinition Height="30"/>
									</Grid.RowDefinitions>
									<StackPanel Grid.Row="0" Orientation="Horizontal">
										<TextBlock Text="&#xE121;" FontSize="24" FontFamily="Segoe MDL2 Assets">
											<ToolTipService.ToolTip>
												<ToolTip Placement="Right">
													<TextBlock Text="{x:Bind StatInfo.begintimeSTR, Mode=OneWay}"/>
												</ToolTip>
											</ToolTipService.ToolTip>
										</TextBlock>
										<TextBlock FontSize="24" Margin="5,-3" Text="{x:Bind StatInfo.noteTitle, Mode=OneWay}" TextWrapping="WrapWholeWords"/>
									</StackPanel>
									<Grid Grid.Row="1" Visibility="{x:Bind StatInfo.wasTimeLimited, Mode=OneWay}">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="*"/>
										</Grid.ColumnDefinitions>
										<TextBlock Margin="5,3" Grid.Column="0">
                                            <Run Text="{x:Bind StatInfo.totalTimespend, Mode=OneWay}"/>
                                            <Run Text="/"/>
                                            <Run Text="{x:Bind StatInfo.totalLimitTime, Mode=OneWay}"/>
										</TextBlock>
										<ProgressBar Grid.Column="1" Margin="5,3" VerticalAlignment="Stretch" Minimum="0" Maximum="100" Value="{x:Bind StatInfo.timeValue, Mode=OneWay}"/>
									</Grid>
									<Grid Grid.Row="2">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="*"/>
										</Grid.ColumnDefinitions>
										<TextBlock Margin="5,3">
                                            <Run Text="{x:Bind currentChoice, Mode=OneWay}"/>
                                            <Run Text="/"/>
                                            <Run Text="{x:Bind totalChoices, Mode=OneWay}"/>
										</TextBlock>
										<ProgressBar Grid.Column="1" Margin="5,3" VerticalAlignment="Stretch" Minimum="0" Maximum="100" Value="{x:Bind choiceProgress, Mode=OneWay}"/>
									</Grid>
								</Grid>
							</DataTemplate>
						</ListView.ItemTemplate>
					</ListView>
					<ad:AdControl 
						Height="120"
						IsAutoRefreshEnabled="True"
						Grid.Row="2"
						ApplicationId="9nzklwbqcq31"
						AdUnitId="11689284"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"/>
					<CommandBar Grid.Row="3">
						<AppBarButton Visibility="Visible" Icon="Refresh" Label="Reload">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel2.RefreshSessionList}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</AppBarButton>
						<AppBarButton Visibility="{x:Bind ViewModel2.isSelected, Mode=OneWay}" Icon="OpenLocal" x:Uid="Home_open" Label="Open">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel2.OpenSession}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</AppBarButton>
						<AppBarButton Visibility="{x:Bind ViewModel2.isSelected, Mode=OneWay}" Icon="Delete" x:Uid="Home_delete" Label="Delete">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel2.DeleteSession}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</AppBarButton>
						<AppBarButton Visibility="{x:Bind ViewModel2.isSelected, Mode=OneWay}" Icon="Cancel" x:Uid="Home_deselect" Label="De-Select">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel2.DeSelectSession}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</AppBarButton>
					</CommandBar>
				</Grid>
			</Grid>
		</Grid>
		<Popup IsOpen="{x:Bind ViewModel.EditWithPopup,Mode=TwoWay}" Grid.Row="1" Width="250" Height="180">
			<Grid Padding="10" Background="{ThemeResource AccentButtonBackgroundPointerOver}">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<TextBlock x:Uid="Home_edit_with" Style="{ThemeResource TitleTextBlockStyle}" Text="Edit with" HorizontalAlignment="Center"/>
				<Button Margin="0,5" HorizontalAlignment="Center" Grid.Row="1">
					<i:Interaction.Behaviors>
						<ic:EventTriggerBehavior EventName="Click">
							<ic:InvokeCommandAction Command="{x:Bind ViewModel.SendToNoteEdior}"/>
						</ic:EventTriggerBehavior>
					</i:Interaction.Behaviors>
					<StackPanel Orientation="Horizontal">
						<SymbolIcon Symbol="Edit"/>
						<TextBlock Margin="5" x:Uid="Home_edit_with_memoedit" VerticalAlignment="Center" Text="Memo editor"/>
					</StackPanel>
				</Button>
				<Button Margin="0,5" Grid.Row="2" HorizontalAlignment="Center">
					<i:Interaction.Behaviors>
						<ic:EventTriggerBehavior EventName="Click">
							<ic:InvokeCommandAction Command="{x:Bind ViewModel.SendToQuestionDesigner}"/>
						</ic:EventTriggerBehavior>
					</i:Interaction.Behaviors>
					<StackPanel Orientation="Horizontal">
						<SymbolIcon Symbol="Help"/>
						<TextBlock Margin="5" VerticalAlignment="Center" x:Uid="Home_edit_with_questdesi" Text="Question designer"/>
					</StackPanel>
				</Button>
				<Button Margin="0,5" Grid.Row="3" HorizontalAlignment="Center">
					<i:Interaction.Behaviors>
						<ic:EventTriggerBehavior EventName="Click">
							<ic:InvokeCommandAction Command="{x:Bind ViewModel.CloseOpenWithDialog}"/>
						</ic:EventTriggerBehavior>
					</i:Interaction.Behaviors>
					<StackPanel Orientation="Horizontal">
						<SymbolIcon Symbol="Cancel"/>
						<TextBlock Margin="5" x:Uid="Home_edit_with_cancel" VerticalAlignment="Center" Text="Cancel"/>
					</StackPanel>
				</Button>
			</Grid>
		</Popup>
	</Grid>
</Page>