<Page
    x:Class="JustRemember.Views.Match"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
	xmlns:ad="using:Microsoft.Advertising.WinRT.UI"
	mc:Ignorable="d">
	<Page.Resources>
		<Style x:Key="recTan" TargetType="Grid">
			<Style.Setters>
				<Setter Property="Background" Value="{ThemeResource AccentButtonBackground}"/>
				<Setter Property="BorderBrush" Value="{ThemeResource AccentButtonBorderBrush}"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="Margin" Value="2"/>
			</Style.Setters>
		</Style>
		<Style x:Key="txtIcon" TargetType="TextBlock">
			<Setter Property="Margin" Value="0,-10,0,0"/>
			<Setter Property="VerticalAlignment" Value="Stretch"/>
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
		</Style>
	</Page.Resources>
	<Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
		<Grid.Resources>
			<Storyboard x:Name="startPause">
				<DoubleAnimationUsingKeyFrames 
					BeginTime="0:0:0" 
					Storyboard.TargetName="infoGrid"
					Storyboard.TargetProperty="MaxHeight"
					Duration="0:0:0.25"
					EnableDependentAnimation="True">
					<SplineDoubleKeyFrame KeyTime="0:0:0" Value="32"/>
					<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetName="Row0"
					Storyboard.TargetProperty="MaxHeight"
					Duration="0:0:0.25"
					EnableDependentAnimation="True">
					<SplineDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
					<SplineDoubleKeyFrame KeyTime="0:0:0.125" Value="0"/>
					<SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="300"/>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames
					Storyboard.TargetName="Row2"
					Storyboard.TargetProperty="MaxHeight"
					Duration="0:0:0.25"
					EnableDependentAnimation="True">
					<SplineDoubleKeyFrame KeyTime="0:0:0" Value="280"/>
					<SplineDoubleKeyFrame KeyTime="0:0:0.125" Value="280"/>
					<SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard x:Name="stopPause">
				<DoubleAnimation 
                    Storyboard.TargetName="Row0" 
                    Storyboard.TargetProperty="MaxHeight"
                    EnableDependentAnimation="True"
                    From="300"
                    To="0"
                    Duration="0:0:0.25"/>
				<DoubleAnimation 
                    Storyboard.TargetName="Row2" 
                    Storyboard.TargetProperty="MaxHeight"
                    EnableDependentAnimation="True"
                    From="0"
                    To="280"
                    Duration="0:0:0.25"/>
				<DoubleAnimation 
                    Storyboard.TargetName="infoGrid" 
                    Storyboard.TargetProperty="MaxHeight"
                    EnableDependentAnimation="True"
                    From="0"
                    To="32"
                    Duration="0:0:0.25"/>
			</Storyboard>
		</Grid.Resources>
		<Grid.RowDefinitions>
			<RowDefinition x:Name="Row0" Height="*"/>
			<RowDefinition x:Name="Row1" Height="*"/>
			<RowDefinition x:Name="Row2" Height="*"/>
		</Grid.RowDefinitions>
		<Grid Grid.Row="0" Background="{ThemeResource SystemControlBackgroundBaseLowBrush}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<!--Tile-->
				<Grid Margin="5">
					<Grid.RowDefinitions>
						<RowDefinition Height="*"/>
						<RowDefinition Height="*"/>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="1.25*"/>
					</Grid.ColumnDefinitions>
					<Grid Grid.Row="0" Grid.Column="0" Style="{StaticResource recTan}">
						<TextBlock Text="&#xE112;" Margin="0,-10,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{ThemeResource AccentButtonForeground}" FontSize="40" FontFamily="Segoe MDL2 Assets"/>
						<TextBlock x:Uid="Match_leave" Margin="5,1" VerticalAlignment="Bottom" Foreground="{ThemeResource AccentButtonForeground}" Text="Leave"/>
						<Button VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Foreground="Transparent" Background="Transparent">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel.BackToMainMenu}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>							
						</Button>
					</Grid>
					<Grid Grid.Row="0" Grid.Column="1" Style="{StaticResource recTan}">
						<TextBlock Margin="0,-10,0,0" VerticalAlignment="Center" Foreground="{ThemeResource AccentButtonForeground}" FontSize="40" HorizontalAlignment="Center" Text="&#xE0E5;" FontFamily="Segoe MDL2 Assets"/>
						<TextBlock x:Uid="Match_continue" Margin="5,1" VerticalAlignment="Bottom" Foreground="{ThemeResource AccentButtonForeground}" Text="Continue"/>
						<Button VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Foreground="Transparent" Background="Transparent">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel.UnPauseFunc}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</Button>
					</Grid>
					<Grid Grid.Row="0" Grid.Column="2" Style="{StaticResource recTan}">
						<TextBlock Margin="0,-10,0,0" VerticalAlignment="Center" Foreground="{ThemeResource AccentButtonForeground}" FontSize="40" HorizontalAlignment="Center" Text="&#xE105;" FontFamily="Segoe MDL2 Assets"/>
						<TextBlock x:Uid="Match_save" Margin="5,1" VerticalAlignment="Bottom" Foreground="{ThemeResource AccentButtonForeground}" Text="Save session"/>
						<Button IsEnabled="{x:Bind ViewModel.isStillNotSaveSession, Mode=OneWay}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Foreground="Transparent" Background="Transparent">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel.SaveSession}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</Button>
					</Grid>
					<Grid Grid.Row="1" Grid.Column="0" Style="{StaticResource recTan}">
						<TextBlock Margin="0,-10,0,0" VerticalAlignment="Center" Foreground="{ThemeResource AccentButtonForeground}" FontSize="40" HorizontalAlignment="Center" Text="&#xE117;" FontFamily="Segoe MDL2 Assets"/>
						<TextBlock x:Uid="Match_restart" Margin="5,1" VerticalAlignment="Bottom" Foreground="{ThemeResource AccentButtonForeground}" Text="Restart"/>
						<Button VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Foreground="Transparent" Background="Transparent">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel.RestartMatch}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</Button>
					</Grid>
					<ad:AdControl
						Visibility="{x:Bind ViewModel.showAds,Mode=OneWay}"
						IsAutoRefreshEnabled="True"
						Grid.Row="1"
						Grid.Column="2"
						ApplicationId="9nzklwbqcq31"
						AdUnitId="11689284"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"/>
					<Grid Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="{x:Bind ViewModel.spanableAds, Mode=OneWay}" Style="{StaticResource recTan}">
						<TextBlock Margin="5,2" Foreground="{ThemeResource AccentButtonForeground}">
                            <Run x:Uid="Match_detail_progress" Text="Progress: "/>
                            <Run Text="{x:Bind ViewModel.currentChoice,Mode=OneWay}"/>
                            <Run Text="/"/>
                            <Run Text="{x:Bind ViewModel.totalChoice, Mode=OneTime}"/>
                            <LineBreak/>
                            <Run x:Uid="Match_detail_wrong" Text="Wrong: "/>
                            <Run Text="{x:Bind ViewModel.totalWrong,Mode=OneWay}"/>
                            <LineBreak/>
                            <Run x:Uid="Match_detail_time" Text="Time: "/>  
                            <Run Text="{x:Bind ViewModel.spendedTime,Mode=OneWay}"/>
                            <Run Text="/"/>
                            <Run Text="{x:Bind ViewModel.totalLimitTime,Mode=OneTime}"/>
						</TextBlock>
						<Button VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Foreground="Transparent" Background="Transparent">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel.ToggleDetailStatus}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</Button>
					</Grid>
					<Grid Visibility="{x:Bind ViewModel.detailStat, Mode=OneWay}" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="3">
						<Rectangle Fill="{ThemeResource AccentButtonBackground}"/>
						<ScrollViewer>
							<TextBlock FontSize="24" Margin="5">								
								<Run x:Uid="Config_stat_started" Text="Started on: "/><Run Text="{x:Bind ViewModel.beginTimeSTR, Mode=OneWay}"/><LineBreak/>
								<Run x:Uid="Match_detail_progress" Text="Progress: "/><Run Text="{x:Bind ViewModel.currentChoice, Mode=OneWay}"/><Run Text="/"/><Run Text="{x:Bind ViewModel.totalChoice, Mode=OneTime}"/><LineBreak/>
								<Run x:Uid="Match_detail_time" Text="Time: "/><Run Text="{x:Bind ViewModel.spendedTime,Mode=OneWay}"/><Run Text="/"/><Run Text="{x:Bind ViewModel.totalLimitTime,Mode=OneTime}"/><LineBreak/>
								<Run x:Uid="Match_detail_wrong"  Text="Wrong: "/><Run Text="{x:Bind ViewModel.totalWrong,Mode=OneWay}"/><LineBreak/>
							</TextBlock>
						</ScrollViewer>
						<Button Width="40" Height="40" VerticalAlignment="Top" HorizontalAlignment="Right">
							<SymbolIcon Symbol="Cancel"/>
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel.ToggleDetailStatus}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</Button>
					</Grid>
				</Grid>
				<Slider Minimum="8" Maximum="72" Grid.Row="1" Margin="5" Value="{x:Bind ViewModel.FontSize, Mode=TwoWay}">
					<Slider.Header>
						<TextBlock>
                            <Run x:Uid="Edit_size_a" Text="Display text size ("/>
                            <Run Text="{x:Bind ViewModel.FontSize, Mode=OneWay}"/>
                            <Run x:Uid="Edit_size_b" Text=")"/>
						</TextBlock>
					</Slider.Header>
				</Slider>
			</Grid>
		</Grid>
		<Grid Grid.Row="1" Background="{ThemeResource SystemControlPageBackgroundBaseLowBrush}">
			<ScrollViewer x:Name="displayTextScroll" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
				<TextBlock x:Name="dpTxt" x:FieldModifier="public" FontSize="{x:Bind ViewModel.FontSize, Mode=OneWay}" TextWrapping="Wrap" Margin="10" VerticalAlignment="Bottom"/>
			</ScrollViewer>
			<Grid Height="32" VerticalAlignment="Top" x:Name="infoGrid" Grid.Row="0" Background="{ThemeResource SystemControlPageBackgroundBaseLowBrush}">
				<Rectangle Opacity="0.8" Grid.Row="1" Fill="{ThemeResource AccentButtonBackground}"/>
				<Grid Grid.Row="1" VerticalAlignment="Top">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
					<StackPanel Orientation="Horizontal">
						<Button Width="50" Background="Transparent" Height="32">
							<SymbolIcon Symbol="Pause"/>
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel.PauseFunc}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</Button>
						<Button Visibility="{x:Bind debugShow, Mode=OneTime}" Width="50" Background="Transparent" Height="32">
							<SymbolIcon Symbol="Refresh"/>
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind ViewModel.DebugChoose}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</Button>
					</StackPanel>
					<TextBlock Grid.Column="1" VerticalAlignment="Center">
                        <Run Text="{x:Bind ViewModel.currentDisplayChoice,Mode=OneWay}"/>
                        <Run Text="/"/>
                        <Run Text="{x:Bind ViewModel.totalChoice, Mode=OneWay}"/>
					</TextBlock>
					<TextBlock Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" Text="{x:Bind ViewModel.totalWrong,Mode=OneWay}"/>
					<TextBlock Margin="0,0,5,0" TextAlignment="Right" Grid.Column="3" VerticalAlignment="Center">
                        <Run Text="{x:Bind ViewModel.spendedTime,Mode=OneWay}"/>
                        <Run Text="/"/>
                        <Run Text="{x:Bind ViewModel.totalLimitTime,Mode=OneTime}"/>
					</TextBlock>
				</Grid>
			</Grid>
		</Grid>
		<!--Choice list-->
		<Grid Grid.Row="2">
			<ItemsControl Visibility="{x:Bind ViewModel.isItCenterMode}" VerticalAlignment="Center" HorizontalAlignment="Stretch">
				<Button Margin="4" Content="{x:Bind ViewModel.Choice0Content, Mode=OneWay}" Visibility="{x:Bind ViewModel.Choice0Display, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="12,6">
					<i:Interaction.Behaviors>
						<ic:EventTriggerBehavior EventName="Click">
							<ic:InvokeCommandAction Command="{x:Bind ViewModel.Choose1}"/>
						</ic:EventTriggerBehavior>
					</i:Interaction.Behaviors>
				</Button>
				<Button Margin="4" Content="{x:Bind ViewModel.Choice1Content, Mode=OneWay}" Visibility="{x:Bind ViewModel.Choice1Display, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="12,6">
					<i:Interaction.Behaviors>
						<ic:EventTriggerBehavior EventName="Click">
							<ic:InvokeCommandAction Command="{x:Bind ViewModel.Choose2}"/>
						</ic:EventTriggerBehavior>
					</i:Interaction.Behaviors>
				</Button>
				<Button Margin="4" Content="{x:Bind ViewModel.Choice2Content, Mode=OneWay}" Visibility="{x:Bind ViewModel.Choice2Display, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="12,6">
					<i:Interaction.Behaviors>
						<ic:EventTriggerBehavior EventName="Click">
							<ic:InvokeCommandAction Command="{x:Bind ViewModel.Choose3}"/>
						</ic:EventTriggerBehavior>
					</i:Interaction.Behaviors>
				</Button>
				<Button Margin="4" Content="{x:Bind ViewModel.Choice3Content, Mode=OneWay}" Visibility="{x:Bind ViewModel.Choice3Display, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="12,6">
					<i:Interaction.Behaviors>
						<ic:EventTriggerBehavior EventName="Click">
							<ic:InvokeCommandAction Command="{x:Bind ViewModel.Choose4}"/>
						</ic:EventTriggerBehavior>
					</i:Interaction.Behaviors>
				</Button>
				<Button Margin="4" Content="{x:Bind ViewModel.Choice4Content, Mode=OneWay}" Visibility="{x:Bind ViewModel.Choice4Display, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="12,6">
					<i:Interaction.Behaviors>
						<ic:EventTriggerBehavior EventName="Click">
							<ic:InvokeCommandAction Command="{x:Bind ViewModel.Choose5}"/>
						</ic:EventTriggerBehavior>
					</i:Interaction.Behaviors>
				</Button>
			</ItemsControl>
			<Grid Visibility="{x:Bind ViewModel.isItBottomMode}">
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="60"/>
				</Grid.RowDefinitions>
				<StackPanel Margin="5" Orientation="Vertical">
					<TextBlock Text="{x:Bind ViewModel.Choice0Content, Mode=OneWay}" FontSize="{x:Bind ViewModel.FontSize, Mode=OneWay}" Visibility="{x:Bind ViewModel.Choice0Display}"/>
					<TextBlock Text="{x:Bind ViewModel.Choice1Content, Mode=OneWay}" FontSize="{x:Bind ViewModel.FontSize, Mode=OneWay}" Visibility="{x:Bind ViewModel.Choice1Display}"/>
					<TextBlock Text="{x:Bind ViewModel.Choice2Content, Mode=OneWay}" FontSize="{x:Bind ViewModel.FontSize, Mode=OneWay}" Visibility="{x:Bind ViewModel.Choice2Display}"/>
					<TextBlock Text="{x:Bind ViewModel.Choice3Content, Mode=OneWay}" FontSize="{x:Bind ViewModel.FontSize, Mode=OneWay}" Visibility="{x:Bind ViewModel.Choice3Display}"/>
					<TextBlock Text="{x:Bind ViewModel.Choice4Content, Mode=OneWay}" FontSize="{x:Bind ViewModel.FontSize, Mode=OneWay}" Visibility="{x:Bind ViewModel.Choice4Display}"/>
				</StackPanel>
				<Grid Grid.Row="1" HorizontalAlignment="Center">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
					<Button Visibility="{x:Bind ViewModel.Choice0Display, Mode=OneWay}" Grid.Column="0" Margin="4" Content="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" Padding="12,6">
						<i:Interaction.Behaviors>
							<ic:EventTriggerBehavior EventName="Click">
								<ic:InvokeCommandAction Command="{x:Bind ViewModel.Choose1}"/>
							</ic:EventTriggerBehavior>
						</i:Interaction.Behaviors>
					</Button>
					<Button Visibility="{x:Bind ViewModel.Choice1Display, Mode=OneWay}" Grid.Column="1" Margin="4" Content="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" Padding="12,6">
						<i:Interaction.Behaviors>
							<ic:EventTriggerBehavior EventName="Click">
								<ic:InvokeCommandAction Command="{x:Bind ViewModel.Choose2}"/>
							</ic:EventTriggerBehavior>
						</i:Interaction.Behaviors>
					</Button>
					<Button Visibility="{x:Bind ViewModel.Choice2Display, Mode=OneWay}" Grid.Column="2" Margin="4" Content="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" Padding="12,6">
						<i:Interaction.Behaviors>
							<ic:EventTriggerBehavior EventName="Click">
								<ic:InvokeCommandAction Command="{x:Bind ViewModel.Choose3}"/>
							</ic:EventTriggerBehavior>
						</i:Interaction.Behaviors>
					</Button>
					<Button Visibility="{x:Bind ViewModel.Choice3Display, Mode=OneWay}" Grid.Column="3" Margin="4" Content="4" HorizontalAlignment="Stretch" VerticalAlignment="Center" Padding="12,6">
						<i:Interaction.Behaviors>
							<ic:EventTriggerBehavior EventName="Click">
								<ic:InvokeCommandAction Command="{x:Bind ViewModel.Choose4}"/>
							</ic:EventTriggerBehavior>
						</i:Interaction.Behaviors>
					</Button>
					<Button Visibility="{x:Bind ViewModel.Choice4Display, Mode=OneWay}" Grid.Column="4" Margin="4" Content="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" Padding="12,6">
						<i:Interaction.Behaviors>
							<ic:EventTriggerBehavior EventName="Click">
								<ic:InvokeCommandAction Command="{x:Bind ViewModel.Choose5}"/>
							</ic:EventTriggerBehavior>
						</i:Interaction.Behaviors>
					</Button>
				</Grid>
			</Grid>
			<StackPanel Visibility="{x:Bind ViewModel.isItWriteMode}" VerticalAlignment="Center">
				<TextBox KeyDown="Writing" x:Name="writeBox" VerticalAlignment="Center" HorizontalAlignment="Stretch" Width="250" FontSize="24"/>
				<Button x:Uid="Config_submit" Margin="0,5" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Submit" FontSize="20" Click="SubmitText"/>
				<TextBlock Visibility="Collapsed" x:Name="debugInfo" VerticalAlignment="Center" Margin="10,0,0,0" FontSize="18"/>
			</StackPanel>
		</Grid>
		<Grid Visibility="{x:Bind ViewModel.BlindThePage, Mode=OneWay}" Background="Black" Grid.Row="0" Grid.RowSpan="3">
			<TextBlock x:Uid="Match_calmdown" Text="NO NEED TO HURRY!" FontSize="48" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center"/>
			<ad:AdControl
						Visibility="{x:Bind ViewModel.showAds,Mode=OneWay}"
						IsAutoRefreshEnabled="True"
						Grid.Row="1"
						Grid.Column="2"
						ApplicationId="9nzklwbqcq31"
						AdUnitId="11689284"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Bottom"
						Height="120"/>
		</Grid>
	</Grid>
</Page>