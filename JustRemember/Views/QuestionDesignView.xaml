<Page
    x:Class="JustRemember.Views.QuestionDesignView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:JustRemember.Views"
	xmlns:mod="using:JustRemember.Models"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    mc:Ignorable="d">

	<Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<CommandBar Grid.Row="0">
				<CommandBar.Content>
					<Grid Height="48" VerticalAlignment="Stretch">
						<TextBlock Margin="5,0" Style="{ThemeResource TitleTextBlockStyle}" VerticalAlignment="Center">
							<Run Text="{x:Bind vm.questionCount, Mode=OneWay}"/> question
						</TextBlock>
					</Grid>
				</CommandBar.Content>
				<AppBarButton Label="Add" Icon="Add">
					<i:Interaction.Behaviors>
						<ic:EventTriggerBehavior EventName="Click">
							<ic:InvokeCommandAction Command="{x:Bind vm.addQuestion,Mode=OneWay}"/>
						</ic:EventTriggerBehavior>
					</i:Interaction.Behaviors>
				</AppBarButton>
				<AppBarButton Label="Refresh" Icon="Refresh">
					<i:Interaction.Behaviors>
						<ic:EventTriggerBehavior EventName="Click">
							<ic:InvokeCommandAction Command="{x:Bind vm.refreshQuestions,Mode=OneWay}"/>
						</ic:EventTriggerBehavior>
					</i:Interaction.Behaviors>
				</AppBarButton>
				<AppBarButton Label="{x:Bind vm.saveLabelPopup, Mode=OneWay}" Icon="{x:Bind vm.saveIconPopup, Mode=OneWay}">
					<i:Interaction.Behaviors>
						<ic:EventTriggerBehavior EventName="Click">
							<ic:InvokeCommandAction Command="{x:Bind vm.saveFile,Mode=OneWay}"/>
						</ic:EventTriggerBehavior>
					</i:Interaction.Behaviors>
				</AppBarButton>
				<CommandBar.SecondaryCommands>
					<AppBarButton Label="Setting" Icon="Setting">
						<i:Interaction.Behaviors>
							<ic:EventTriggerBehavior EventName="Click">
								<ic:InvokeCommandAction Command="{x:Bind vm.showSetting,Mode=OneWay}"/>
							</ic:EventTriggerBehavior>
						</i:Interaction.Behaviors>
					</AppBarButton>
					<AppBarButton Label="Send to note editor" Icon="Edit">
						<i:Interaction.Behaviors>
							<ic:EventTriggerBehavior EventName="Click">
								<ic:InvokeCommandAction Command="{x:Bind vm.sendToEditor,Mode=OneWay}"/>
							</ic:EventTriggerBehavior>
						</i:Interaction.Behaviors>
					</AppBarButton>
				</CommandBar.SecondaryCommands>
			</CommandBar>
			<ListView x:Name="questionList" SelectedIndex="{x:Bind vm.selectedQuestion, Mode=TwoWay}" Grid.Row="1" ItemsSource="{x:Bind vm.Questions,Mode=TwoWay}">
				<ListView.ItemContainerStyle>
					<Style TargetType="ListViewItem">
						<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
					</Style>
				</ListView.ItemContainerStyle>
				<ListView.ItemTemplate>
					<DataTemplate x:DataType="mod:QuestionDesignModel">
						<Grid Margin="0,5" Background="{ThemeResource AccentButtonBackgroundDisabled}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="55"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<TextBlock VerticalAlignment="Center" TextWrapping="Wrap" Grid.Column="0" Text="{x:Bind Question}" Margin="5"/>
								<Button Tag="{x:Bind UID}" Click="DeleteQuestion" Margin="5,5,5,0" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Right">
									<SymbolIcon Symbol="Delete"/>
								</Button>
							</Grid>

							<Rectangle Grid.Row="2" Margin="0,5" Fill="{ThemeResource AccentButtonBackground}"/>
							<StackPanel VerticalAlignment="Center" Grid.Row="1">
								<Button HorizontalAlignment="Center" Tag="{x:Bind UID}" Click="MoveUp" FontFamily="Segoe MDL2 Assets" Content="&#xE010;" Visibility="{x:Bind isCanUp, Mode=OneWay}"/>
								<TextBlock Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{x:Bind Index}" Margin="0,10"/>
								<Button HorizontalAlignment="Center" Tag="{x:Bind UID}" Click="MoveDown" FontFamily="Segoe MDL2 Assets" Content="&#xE011;" Margin="0,5" Visibility="{x:Bind isCanDown, Mode=OneWay}"/>
							</StackPanel>

							<Grid Grid.Row="1" Grid.Column="1" Margin="5">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="24"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Rectangle Margin="-5,0,0,0" Fill="{ThemeResource AccentButtonBackgroundPressed}" Grid.ColumnSpan="3"/>
								<CheckBox IsEnabled="false" Grid.Row="0" IsChecked="{x:Bind is1Correct}"/>
								<TextBlock Grid.Row="0" Grid.Column="1" Text="{x:Bind Answer1}" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>

								<Rectangle Margin="-5,0,0,0" Grid.Row="1" Fill="{ThemeResource AccentButtonBackgroundDisabled}" Grid.ColumnSpan="3"/>
								<CheckBox IsEnabled="false" Grid.Row="1" IsChecked="{x:Bind is2Correct}"/>
								<TextBlock Grid.Row="1" Grid.Column="1" Text="{x:Bind Answer2}" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>

								<Rectangle Margin="-5,0,0,0" Grid.Row="2" Fill="{ThemeResource AccentButtonBackgroundPressed}" Grid.ColumnSpan="3"/>
								<CheckBox IsEnabled="false" Grid.Row="2" IsChecked="{x:Bind is3Correct}"/>
								<TextBlock Grid.Row="2" Grid.Column="1" Text="{x:Bind Answer3}" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>

								<Rectangle Margin="-5,0,0,0" Grid.Row="3" Fill="{ThemeResource AccentButtonBackgroundDisabled}" Grid.ColumnSpan="3"/>
								<CheckBox IsEnabled="false" Grid.Row="3" IsChecked="{x:Bind is4Correct}"/>
								<TextBlock Grid.Row="3" Grid.Column="1" Text="{x:Bind Answer4}" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>

								<Rectangle Margin="-5,0,0,0" Grid.Row="4" Fill="{ThemeResource AccentButtonBackgroundPressed}" Grid.ColumnSpan="3"/>
								<CheckBox IsEnabled="false" Grid.Row="4" IsChecked="{x:Bind is5Correct}"/>
								<TextBlock Grid.Row="4" Grid.Column="1" Text="{x:Bind Answer5}" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
							</Grid>
						</Grid>
					</DataTemplate>
				</ListView.ItemTemplate>
			</ListView>
			<Popup IsOpen="{x:Bind vm.showingSave, Mode=TwoWay}" Grid.Row="1" Width="300" Height="240">
				<StackPanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Padding="10">
					<StackPanel Orientation="Horizontal">
						<TextBox x:Name="fileNameEdit" Width="220">
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="TextChanged">
									<ic:InvokeCommandAction Command="{x:Bind vm.savenameCHK}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</TextBox>
						<Button Width="50" Height="40" Margin="10,0">
							<SymbolIcon Symbol="Save"/>
							<i:Interaction.Behaviors>
								<ic:EventTriggerBehavior EventName="Click">
									<ic:InvokeCommandAction Command="{x:Bind vm.saveFile4R,Mode=OneWay}"/>
								</ic:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</Button>
					</StackPanel>
					<TextBlock 
						Visibility="{x:Bind vm.isEmpty, Mode=OneWay}" 
						Style="{ThemeResource SubtitleTextBlockStyle}"
						Text="Name can't be empty"
						x:Uid="Edit_name_empty"/>
					<TextBlock 
						Visibility="{x:Bind vm.isIllegal, Mode=OneWay}" 
						Style="{ThemeResource SubtitleTextBlockStyle}"
						Text="Name can't contains: \ / : * ? &quot; &lt; &gt; |"
						x:Uid="Edit_name_illegal"/>
					<TextBlock 
						Visibility="{x:Bind vm.isExistAR, Mode=OneWay}"
						Style="{ThemeResource SubtitleTextBlockStyle}"
						Text="Name already exist"
						x:Uid="Edit_name_exist"/>
				</StackPanel>
			</Popup>
			<Popup Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Right" Width="300" Height="400" IsOpen="{x:Bind vm.showSettingPopup, Mode=TwoWay}">
				<ScrollViewer VerticalScrollMode="Enabled" Width="300" Height="400" Padding="10" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
					<StackPanel Orientation="Vertical">
						<StackPanel Orientation="Horizontal">
							<Button Width="50" Height="50">
								<SymbolIcon Symbol="Back"/>
								<i:Interaction.Behaviors>
									<ic:EventTriggerBehavior EventName="Click">
										<ic:InvokeCommandAction Command="{x:Bind vm.showSetting,Mode=OneWay}"/>
									</ic:EventTriggerBehavior>
								</i:Interaction.Behaviors>
							</Button>
							<TextBlock Margin="5,0"  Style="{ThemeResource SubheaderTextBlockStyle}" Text="Setting"/>
						</StackPanel>						
						<StackPanel Margin="10" Orientation="Vertical">
							<TextBlock Text="Answer position" Style="{ThemeResource TitleTextBlockStyle}"/>
							<ListBox SelectedIndex="{x:Bind vm.AnswerPosition, Mode=TwoWay}">
								<ListBoxItem Content="Behind question"/>
								<ListBoxItem Content="Bottom of memo"/>
							</ListBox>
						</StackPanel>
						<StackPanel Margin="10" Orientation="Vertical">
							<TextBlock Text="Separate answer and number" Style="{ThemeResource TitleTextBlockStyle}"/>
							<ListBox SelectedIndex="{x:Bind vm.questionSeparator, Mode=TwoWay}">
								<ListBoxItem Content="Separate with &quot;.&quot;"/>
								<ListBoxItem Content="Separate with &quot;)&quot;"/>
							</ListBox>
						</StackPanel>
						<StackPanel Margin="10" Orientation="Vertical">
							<TextBlock Text="Space after separate symbol" Style="{ThemeResource TitleTextBlockStyle}"/>
							<CheckBox Content="Yes" IsChecked="{x:Bind vm.spaceAfterSeparator, Mode=TwoWay}"/>
						</StackPanel>
						<StackPanel Orientation="Vertical">
							<TextBlock Text="Example:" Style="{ThemeResource TitleTextBlockStyle}"/>
							<Grid Margin="5" Background="{ThemeResource SystemControlDisabledBaseLowBrush}">
								<TextBlock FontFamily="Consolas" Margin="10">
												#MODE=EXAM
												<LineBreak/>1<Run Text="{x:Bind vm.whatAfterQAList, Mode=OneWay}"/><Run Text="{x:Bind vm.useSpaceAfterSep, Mode=OneWay}"/>Example question? <Run Text="{x:Bind vm.answerExampleA1, Mode=OneWay}"/>
												<LineBreak/>A<Run Text="{x:Bind vm.whatAfterQAList, Mode=OneWay}"/><Run Text="{x:Bind vm.useSpaceAfterSep, Mode=OneWay}"/>Some incorrect answer.
												<LineBreak/>B<Run Text="{x:Bind vm.whatAfterQAList, Mode=OneWay}"/><Run Text="{x:Bind vm.useSpaceAfterSep, Mode=OneWay}"/>Some incorrect answer.
												<LineBreak/>C<Run Text="{x:Bind vm.whatAfterQAList, Mode=OneWay}"/><Run Text="{x:Bind vm.useSpaceAfterSep, Mode=OneWay}"/>Correct answer.
												<LineBreak/>D<Run Text="{x:Bind vm.whatAfterQAList, Mode=OneWay}"/><Run Text="{x:Bind vm.useSpaceAfterSep, Mode=OneWay}"/>Some incorrect answer.

											<LineBreak/>2<Run Text="{x:Bind vm.whatAfterQAList, Mode=OneWay}"/><Run Text="{x:Bind vm.useSpaceAfterSep, Mode=OneWay}"/>1+1=? <Run Text="{x:Bind vm.answerExampleA2, Mode=OneWay}"/>
												<LineBreak/>A<Run Text="{x:Bind vm.whatAfterQAList, Mode=OneWay}"/><Run Text="{x:Bind vm.useSpaceAfterSep, Mode=OneWay}"/>-1
												<LineBreak/>B<Run Text="{x:Bind vm.whatAfterQAList, Mode=OneWay}"/><Run Text="{x:Bind vm.useSpaceAfterSep, Mode=OneWay}"/>0
												<LineBreak/>C<Run Text="{x:Bind vm.whatAfterQAList, Mode=OneWay}"/><Run Text="{x:Bind vm.useSpaceAfterSep, Mode=OneWay}"/>1
												<LineBreak/>D<Run Text="{x:Bind vm.whatAfterQAList, Mode=OneWay}"/><Run Text="{x:Bind vm.useSpaceAfterSep, Mode=OneWay}"/>2
												<LineBreak/><Run Text="{x:Bind vm.answerExampleB, Mode=OneWay}"/>
								</TextBlock>
							</Grid>
						</StackPanel>
					</StackPanel>
				</ScrollViewer>
			</Popup>
			<Grid Grid.Row="3" Margin="0,5" Background="{ThemeResource AccentButtonBackgroundDisabled}" Visibility="{x:Bind vm.isSelected,Mode=OneWay}">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="*"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="55"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<Grid Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<TextBox VerticalAlignment="Center" TextWrapping="Wrap" Grid.Column="0" Text="{x:Bind vm.selected.Question, Mode=TwoWay}" Margin="5"/>
					<StackPanel Grid.Column="1" Orientation="Horizontal">
						<Button Tag="{x:Bind vm.selected.UID}" Click="DeleteQuestion" Margin="5,5,5,0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right">
							<SymbolIcon Symbol="Delete"/>
						</Button>
						<Button Click="SaveContent" Margin="5,5,5,0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right">
							<SymbolIcon Symbol="Save"/>
						</Button>
					</StackPanel>
				</Grid>

				<Rectangle Grid.Row="2" Margin="0,5" Fill="{ThemeResource AccentButtonBackground}"/>
				<StackPanel VerticalAlignment="Center" Grid.Row="1">
					<Button HorizontalAlignment="Center" Tag="{x:Bind vm.selected.UID}" Click="MoveUp" FontFamily="Segoe MDL2 Assets" Content="&#xE010;" Visibility="{x:Bind vm.selected.isCanUp, Mode=OneWay}"/>
					<TextBlock Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="indexSelected" Margin="0,10"/>
					<Button HorizontalAlignment="Center" Tag="{x:Bind vm.selected.UID}" Click="MoveDown" FontFamily="Segoe MDL2 Assets" Content="&#xE011;" Margin="0,5" Visibility="{x:Bind vm.selected.isCanDown, Mode=OneWay}"/>
				</StackPanel>

				<Grid Grid.Row="1" Grid.Column="1" Margin="5">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="24"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<Rectangle Margin="-5,0,0,0" Fill="{ThemeResource AccentButtonBackgroundPressed}" Grid.ColumnSpan="3"/>
					<CheckBox IsEnabled="true" Grid.Row="0" IsChecked="{x:Bind vm.selected.is1Correct, Mode=TwoWay}"/>
					<TextBox Grid.Row="0" Grid.Column="1" Text="{x:Bind vm.selected.Answer1,Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>

					<Rectangle Margin="-5,0,0,0" Grid.Row="1" Fill="{ThemeResource AccentButtonBackgroundDisabled}" Grid.ColumnSpan="3"/>
					<CheckBox IsEnabled="true" Grid.Row="1" IsChecked="{x:Bind vm.selected.is2Correct, Mode=TwoWay}"/>
					<TextBox Grid.Row="1" Grid.Column="1" Text="{x:Bind vm.selected.Answer2,Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>

					<Rectangle Margin="-5,0,0,0" Grid.Row="2" Fill="{ThemeResource AccentButtonBackgroundPressed}" Grid.ColumnSpan="3"/>
					<CheckBox IsEnabled="true" Grid.Row="2" IsChecked="{x:Bind vm.selected.is3Correct, Mode=TwoWay}"/>
					<TextBox Grid.Row="2" Grid.Column="1" Text="{x:Bind vm.selected.Answer3,Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>

					<Rectangle Margin="-5,0,0,0" Grid.Row="3" Fill="{ThemeResource AccentButtonBackgroundDisabled}" Grid.ColumnSpan="3"/>
					<CheckBox IsEnabled="true" Grid.Row="3" IsChecked="{x:Bind vm.selected.is4Correct, Mode=TwoWay}"/>
					<TextBox Grid.Row="3" Grid.Column="1" Text="{x:Bind vm.selected.Answer4,Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>

					<Rectangle Margin="-5,0,0,0" Grid.Row="4" Fill="{ThemeResource AccentButtonBackgroundPressed}" Grid.ColumnSpan="3"/>
					<CheckBox IsEnabled="true" Grid.Row="4" IsChecked="{x:Bind vm.selected.is5Correct, Mode=TwoWay}"/>
					<TextBox Grid.Row="4" Grid.Column="1" Text="{x:Bind vm.selected.Answer5,Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
				</Grid>
			</Grid>
		</Grid>
	</Grid>
</Page>
